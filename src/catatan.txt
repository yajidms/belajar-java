Widening Casting (otomatis) = byte > short > int > long > float > double
Narrowing Casting (Manual) = double > float > long > int > char > short > byte

ketika memakai print dari beberapa line code seperti ini :
    System.out.print(y);
    System.out.print(a);
    System.out.print(z);
    System.out.print(i);
    System.out.print(d);
maka membentuk suatu kata atau tanpa jeda tiap output dikeluarkan, kalau mau melakukan enter atau output secara terpisah maka menggunakan "ln":
    System.out.println(y);
    System.out.println(a);
    System.out.println(z);
    System.out.println(i);
    System.out.println(d);

String firstName = ;
String lastName = ;
String fullName = firstName + " " + lastName; (menyatukan dua string dengan menambahkan " ")

terminal : javac

variabel array
String[] arrayString;
arrayString = new String [-];

&& = DAN
|| = OR
!  = Kebalikan/opposite

for terdapat init statement, kondisi dan post statement dalam satu sintak perulangan contohnya seperti:
for(var counter <= 1; counter <= 10; counter++)
sedangkan while cuman terdapat kondisi doang di 1 sintaknya:
while (counter <= 10)
perbedaan antara doWhileLoop dengan whileLoop yaitu, kalau doWhileLoop dia mengeksekusi perulangan 1 kali dari pengecekan kondisi

break hanya melakukan sekali pengulangan dan continue melanjutkan pengulangan sampai valuenya habis

for each mengakses seluruh data array (value) secara otomatis dibandingkan counter data array secara perulangan yang lumayan ribet
contoh perbandingan penggunaan for each dengan forloop terhadap array:
for(var i : array) //bagian for each
for(var i = 0; i < array.length; i++) //bagian forloop